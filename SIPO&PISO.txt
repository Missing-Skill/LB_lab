// SIPO


module sipo_shift_register_design(input clk,b,output[3:0]q);
d_ff dut1(.clk(clk),.d(b),.q(q[3]),.rst());
d_ff dut2(.clk(clk),.d(q[3]),.q(q[2]),.rst());
d_ff dut3(.clk(clk),.d(q[2]),.q(q[1]),.rst());
d_ff dut4(.clk(clk),.d(q[1]),.q(q[0]),.rst());
endmodule
// d flip flop
module d_ff (
input clk,
input d,
input rst,
output reg q);
always @(posedge clk)
begin
if (rst)
q <= 1'b0;
else
q <= d;
end
endmodule


//PISO

module piso_design(input clk,sl,input[3:0]b,output q);
wire w1,w2,w3,w4,w5,w6,w7;
wire o1,o2,o3;
d_ff d0(.clk(clk),.d(b[0]),.q(w1),.rst());
ao a1(.a(w1),.b(sl),.c(sl),.d(b[1]),.z(o1));
d_ff d1(.clk(clk),.d(o1),.q(w4),.rst());
ao a2(.a(w4),.b(sl),.c(sl),.d(b[2]),.z(o2));
d_ff d2(.clk(clk),.d(o2),.q(w7),.rst());
ao a3(.a(w7),.b(sl),.c(sl),.d(b[3]),.z(o3));
d_ff d3(.clk(clk),.d(o3),.q(q),.rst());
endmodule

module d_ff (
input clk, 
input d, 
input rst, 
output reg q 
);
always @(posedge clk)
begin
if (rst) 
q <= 1'b0;
else 
q <= d;
end
endmodule